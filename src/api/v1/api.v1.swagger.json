{
  "openapi": "3.0.0",
  "info": {
    "title": "CRUD",
    "description": "CRUD API",
    "version": "1.0.0",
    "contact": {
      "email": "backendwithali@gmail.com",
      "name": "Ali nazari"
    }
  },
  "components": {
    "schemas": {
      "successResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "number", "example": 200 },
          "code": { "type": "number", "example": "OK" },
          "message": { "type": "string", "example": "success!" }
        }
      },
      "registerUserInput": {
        "type": "object",
        "required": ["email", "password", "confirmPassword"],
        "properties": {
          "email": {
            "type": "string",
            "example": "backendwithali@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "should be at least 8 chars"
          },
          "confirmPassword": {
            "type": "string",
            "example": "should be at least 8 chars"
          }
        }
      },
      "loginUserInput": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "example": "backendwithali@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "should be at least 8 chars"
          }
        }
      },
      "registeredSuccessfully": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 200
          },
          "code": {
            "type": "string",
            "example": "OK"
          },
          "message": {
            "type": "string",
            "example": "registered successfully , please login!"
          },
          "user": {
            "$ref": "#/components/schemas/user"
          }
        }
      },
      "loggedInSuccessfully": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 200
          },
          "code": {
            "type": "string",
            "example": "OK"
          },
          "message": {
            "type": "string",
            "example": "loggedIn successfully"
          }
        }
      },
      "logoutSuccessfully": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 200
          },
          "code": {
            "type": "string",
            "example": "OK"
          },
          "message": {
            "type": "string",
            "example": "logout successfully"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "backendwithali@gmail.com"
          },
          "_id": {
            "type": "string",
            "example": "user id"
          }
        }
      },
	  "tasks":{
		"type":"array",
		"items":{
			"type": "object",
		"properties": {
		  "title": {
			"type": "string",
			"example": "study"
		  },
		  "isDone": {
			"type": "boolean",
			"example": "false"
		  }
		}
		}
	  }
    }
  },
  "paths": {
    "/health": {
      "get": {
		"tags":["Server"],
        "summary": "checks if the server is running correctly",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "register a new user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registerUserInput"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/registerUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registeredSuccessfully"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "login an existing user",
        "description": "a cookie sent to your browser and that's it. no more pain sending token to me!!",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginUserInput"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/loginUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loggedInSuccessfully"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "summary": "logout an existing user",
        "description": "i will remove your access_token cookie",
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logoutSuccessfully"
                }
              }
            }
          }
        }
      }
    },
    "/user/whoami": {
      "get": {
        "summary": "return info about loggedIn user",
        "description": "check you login status with this end-point",
        "tags": ["User"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 200
                    },
                    "code": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "hello user"
                    },
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "list of user tasks ",
        "description": "returns the list of defined tasks by loggedIn user",
        "tags": ["Tasks"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
					"$ref":"#/components/schemas/tasks"
                }
              }
            }
          }
        }
      }
    }
  }
}
